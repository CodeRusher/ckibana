user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    map $msec $timestamp {
        default "0";
        ~^(?<seconds>\d+)\.(?<milliseconds>\d+)$ $seconds$milliseconds;
    }
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format json '{"timestamp": $timestamp, "request_method": "$request_method", "request_uri": "$request_uri", "status": $status, "request_time": $request_time,  "request_length": $request_length, "http_referer": "$http_referer", "http_user_agent": "$http_user_agent", "http_host": "$http_host", "request_id": "$request_id", "remote_addr":"$remote_addr", "bytes_sent": $bytes_sent, "body_bytes_sent": $body_bytes_sent}';

    access_log /var/log/nginx/access.log json;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server_names_hash_bucket_size 64;
    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        location / {
            index   index.html index.htm;
        }

        location /mock-post {
            if ($request_method = POST) {
                return 200 "This is a mock-post response";
            }
        }

        location /mock-delete {
            if ($request_method = DELETE) {
                return 200 "This is a mock-delete response";
            }
        }

        location /mock-500 {
            return 500 "This is a mock response";
        }

        error_page  404              /404.html;
        location = /404.html {
            internal;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            internal;
        }
    }
}